#!/bin/bash

# TODO : Make this script more like a CLI tool

MUTATOR=$1

EXEC_IN=$2
EXEC_UPDATED=$EXEC_IN.updated
EXEC_RENAMED1=$EXEC_UPDATED.renamed1
EXEC_RENAMED2=$EXEC_UPDATED.renamed2
EXEC_OUT=$EXEC_IN.out

FATBIN=$EXEC_IN.fatbin
FATBIN_UPDATED=$FATBIN.updated

GPUBIN=$FATBIN.gfx908
GPUBIN_INSTR=$GPUBIN-instr
GPUBIN_UPDATED=$GPUBIN_INSTR.updated
GPUBIN_UPDATED_NOTE=$GPUBIN_INSTR.updated-note
GPUBIN_FINAL=$GPUBIN.final

# Contains rows of following format :
#   KernelName KernargBufferSize KernargPtrRegister>
INFOS_FILE=$GPUBIN.info

# Contains names of instrumented kernels
NAMES_FILE=$GPUBIN.instrumentedKernelNames

NOTE_IN=$GPUBIN.note
NOTE_OUT=$NOTE_IN.expanded

# 1. Extract fatbin. This will output a $FATBIN
extract-fatbin $EXEC_IN

# 2. Extract gfx908 bin. This will output $GPUBIN
extract-gpubin gfx908 $FATBIN

# 3. Get necessary information about kernels before instrumenting
kernel-info $GPUBIN > $INFOS_FILE

# 4. Run the mutator, instrument kernels (also use the information from step 3).
# This will also emit a file containing list of instrumented kernels ($NAMES_FILE)
$MUTATOR -procedure-count $GPUBIN

# 5. Update kernel descriptors for instrumented kernels
# This will produce $GPUBIN_UPDATED
update-kd $NAMES_FILE $GPUBIN_INSTR

# 4. Modify the note metadata
#
# 4.1 Extract the note section from original binary
llvm-objcopy --dump-section=.note=$NOTE_IN $GPUBIN

# 4.2 For each instrumented kernel, modify the metadata as follows:
# - Expand the kernarg buffer with 1 additional argument, which the additional memory that we will allocate via the host.
# - Increase SGPR usage to 112 (GFX908 only for now)
# This will emit $NOTE_OUT.
expand-args $NAMES_FILE $NOTE_IN

# 4.3 Copy the updated binary, remove the note section
cp $GPUBIN_UPDATED $GPUBIN_UPDATED_NOTE
llvm-objcopy --remove-section=.note $GPUBIN_UPDATED_NOTE

# 4.4 Add the expanded note section
llvm-objcopy --add-section=.note=$NOTE_OUT $GPUBIN_UPDATED_NOTE

# 4.5 Update the program header for the notes section
update-note-phdr $GPUBIN_UPDATED_NOTE $GPUBIN_FINAL

# 5. Update original fatbin with instrumented gpu binary ($GPUBIN_FINAL)
# This will emit $FATBIN_UPDATED
update-fatbin gfx908 $GPUBIN_FINAL $FATBIN

# 6. Update the original executable ($EXEC_IN) by embedding $FATBIN_UPDATED
# This will emit $EXEC_OUT
update-exec $EXEC_IN $FATBIN_UPDATED $EXEC_UPDATED

# 7. Rename fatbin sections so that roc-obj* tools work with the modified executable. Those tools specifically look for the .hip_fatbin section by name.
# - Rename .hip_fatbin section to .old_fatbin
# - Rename .new_fatbin section to .hip_fatbin
# It is possible to do this within the update-exec tool, but doing it here is simpler and less error-prone
llvm-objcopy --rename-section .hip_fatbin=.old_fatbin $EXEC_UPDATED $EXEC_RENAMED1
llvm-objcopy --rename-section .new_fatbin=.hip_fatbin $EXEC_RENAMED1 $EXEC_RENAMED2

cp $EXEC_RENAMED2 $EXEC_OUT

chmod +x $EXEC_OUT
